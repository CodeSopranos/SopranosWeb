1. проверяем, инсталлирован ли питон:
  python --version
  python3 --version
(нам нужна версия 3.x)

2. если нет, ставим: https://www.python.org/downloads/
(если у вас Linux, используйте package manager вашего дистрибутива: apt/yum/etc.)

3. ставим питоновские пакеты:
  pip install django psycopg2-binary
(pip3, если у вас MacOS и вы используете системный питон версии 3)

4. создаём django-проект:
  django-admin startproject siteroot
  cd siteroot

5. запускаем сервер:
  python manage.py runserver
(python3, если у вас MacOS и вы используете системный питон версии 3)

6. проверяем, что сервер поднялся -- идём браузером по адресу http://127.0.0.1:8000/

7. создаём скелет приложения:
  python manage.py startapp hello

8. редактируем hello/views.py:

from django.http import HttpResponse
def index(request):
    return HttpResponse("<h1>Hello, world!</h1>")

9. создаём hello/urls.py:

from django.urls import path
from . import views
urlpatterns = [
    path('', views.index)
]

10. редактируем urls.py в корне проекта:

from django.contrib import admin
from django.urls import path, include
urlpatterns = [
    path('hello/', include('hello.urls')),
    path('admin/', admin.site.urls),
]

11. проверяем, что приложение доступно на сервере -- идём браузером по адресу http://127.0.0.1:8000/hello/

12. устанавливаем PostgreSQL: https://www.postgresql.org/download/
(если у вас Linux, опять же используйте родной package manager вашего дистрибутива)

13. запускаем постгрес:
  * Windows: запускается автоматически при установке
  * Linux: sudo systemctl start postgresql
  * MacOS/Homebrew: brew services start postgresql

14. подключаемся к серверу баз данных:
  psql -U postgres postgres
(здесь первый postgres -- это имя суперпользователя БД, которое вы указали при установке PostgreSQL. если не меняли при установке, то по-умолчанию он называется так)

15. создаём пользователя БД для наших приложений:
  create role django login;
(точка с запятой в конце обязательна для SQL-команд)

16. сгенерируем пароль для пользователя на питоне:

16.1. запускаем интерактивный интерпретатор питона в отдельном окне: python
(в PyCharm можно использовать Python Console внизу окна)

16.2. вводим:

import string
chars = string.ascii_letters + string.digits
from random import choice
''.join(choice(chars) for x in range(32))

16.3 копируем последнюю строку, которую выдал интерпретатор, вместе с кавычками. пример: 'GCdmaq2rOplCJ0qNNVmjap2IHA42FlhC'

17. задаём пароль для пользователя БД (из psql):
  alter role django password 'GCdmaq2rOplCJ0qNNVmjap2IHA42FlhC';

18ю создаём базу данных для наших приложений (из psql):
  create database django owner django;

18. редактируем settings.py в корне проекта, задаём параметры соединения с базой данных (остальное оставляем как есть):

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django',
        'USER': 'django',
        'PASSWORD': 'GCdmaq2rOplCJ0qNNVmjap2IHA42FlhC',
        'HOST': 'localhost',
        'PORT': '5432'
    }
}

19. выполняем миграции:
  python manage.py migrate

20. проверяем, что база успешно инициализирована (из psql):
  \c django
  \d
(должны увидеть непустой список таблиц auth_*, contrib_* и т.д.)
